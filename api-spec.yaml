openapi: 3.0.0
info:
  title: All my rest api
  description: Rest API for experiment.
  version: 0.1.1
servers:
  - url: https://example.com/myreport
    description: My report end point
tags:
  - name: warehouse
    description: Warehouse department
  - name: supervisor
    description: People who handle department
  - name: problem
    description: Problem that exist in department
  - name: head supervisor
    description: The people who responsible above the supervisor and all department
paths:
  /warehouses:
    get:
      tags:
      - warehouse
      summary: Get all warehouse.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warehouse'
        '400':
          $ref: '#/components/responses/400Error'
  /warehouse:
    post:
      tags:
      - warehouse
      summary: Lets a user post a new warehouse
      requestBody:
        $ref: '#/components/requestBodies/Warehouse'
      responses:
        '200':
          description: Successfully created a new warehouse
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Warehouse'

        '400':
          $ref: '#/components/responses/400Error'
  /warehouse/{id}:
    parameters:
          - name: id
            in: path
            required: true
            description: The ID of the warehouse
            schema:
              type: string
            example: 'WAR220203902'
    get:
      tags:
      - warehouse
      summary: Get warehouse by id.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Warehouse'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      tags:
      - warehouse
      summary: Update warehouse by id
      requestBody:
        $ref: '#/components/requestBodies/Warehouse'
      responses:
        '200':
          $ref: '#/components/responses/200Success'

        '400':
          $ref: '#/components/responses/400Error'
  # End of warehouse end point
  /supervisors:
    get:
      tags:
      - supervisor
      summary: Get all supervisor.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supervisor'
        '400':
          $ref: '#/components/responses/400Error'
  /supervisor:
    post:
      tags:
      - supervisor
      summary: Lets a user post a new supervisor
      requestBody:
        $ref: '#/components/requestBodies/Supervisor'
      responses:
        '200':
          description: Successfully created a new supervisor
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Supervisor'

        '400':
          $ref: '#/components/responses/400Error'
  /supervisor/{id}:
    parameters:
        - name: id
          in: path
          required: true
          description: The ID of the supervisor
          schema:
            type: string
          example: 'SUP20220239'
    get:
      tags:
      - supervisor
      summary: Get supervisor by id.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Supervisor'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      tags:
      - supervisor
      summary: Update supervisor by id
      requestBody:
        $ref: '#/components/requestBodies/Supervisor'
      responses:
        '200':
          $ref: '#/components/responses/200Success'

        '400':
          $ref: '#/components/responses/400Error'
  # End of supeervisor end point
  /problems/periode/{periode1}/{periode2}:
    parameters:
        - name: periode1
          in: path
          required: true
          description: The start periode to search, date in unix time
          schema:
            type: number
          example: 80394802938098
        - name: periode2
          in: path
          required: true
          description: The end periode to search, date in unix time
          schema:
            type: number
          example: 80394802938098
    get:
      tags:
      - problem
      summary: Get problems between two periode.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '400':
          $ref: '#/components/responses/400Error'
  /problems/active:
    get:
      tags:
      - problem
      summary: Get problems not finished.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '400':
          $ref: '#/components/responses/400Error'
  /problem/{id}:
    parameters:
        - name: id
          in: path
          required: true
          description: id of problem
          schema:
            type: string
          example: 'PRO2204509'
    get:
      tags:
      - problem
      summary: Get problems not finished.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      tags:
      - problem
      summary: Update problem by id
      requestBody:
        $ref: '#/components/requestBodies/Problem'
      responses:
        '200':
          $ref: '#/components/responses/200Success'

        '400':
          $ref: '#/components/responses/400Error'
  /problem/active/{warehouseId}/{supervisorId}:
    parameters:
        - name: warehouseId
          in: path
          required: true
          description: id of warehouse
          schema:
            type: string
          example: 'WAR2204509'
        - name: supervisorId
          in: path
          required: true
          description: id of supervisor
          schema:
            type: string
          example: 'SUP2204509'
    get:
      tags:
      - problem
      summary: Get problems by warehouse and supervisor.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '400':
          $ref: '#/components/responses/400Error'
  /problem/item/{itemKoded}:
    parameters:
        - name: itemId
          in: path
          required: true
          description: kode of item
          schema:
            type: string
          example: 'item12398'
    get:
      tags:
      - problem
      summary: Get problems by item kode.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Problem'
        '400':
          $ref: '#/components/responses/400Error'
  /problem:
    post:
      tags:
      - problem
      summary: Lets a user post a new problem
      requestBody:
        $ref: '#/components/requestBodies/Problem'
      responses:
        '200':
          description: Successfully created a new problem
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Problem'

        '400':
          $ref: '#/components/responses/400Error'
  # End of problem end point
  /heads_spv:
    get:
      tags:
      - head supervisor
      summary: Get all head supervisor.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Head_supervisor'
        '400':
          $ref: '#/components/responses/400Error'
  /head_spv:
    post:
      tags:
      - head supervisor
      summary: Lets a user post a new head supervisor
      requestBody:
        $ref: '#/components/requestBodies/Head_supervisor'
      responses:
        '200':
          description: Successfully created a new supervisor
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Head_supervisor'

        '400':
          $ref: '#/components/responses/400Error'
  /head_spv/{id}:
    parameters:
        - name: id
          in: path
          required: true
          description: The ID of the head supervisor
          schema:
            type: string
          example: 'HEA20220239'
    get:
      tags:
      - head supervisor
      summary: Get head supervisor by id.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Head_supervisor'
        '400':
          $ref: '#/components/responses/400Error'
    put:
      tags:
      - head supervisor
      summary: Update head supervisor by id
      requestBody:
        $ref: '#/components/requestBodies/Head_supervisor'
      responses:
        '200':
          $ref: '#/components/responses/200Success'

        '400':
          $ref: '#/components/responses/400Error'
  # End of supeervisor end point
  

components:
  schemas:
    Warehouse:
      type: object
      properties:
        id:
          type: string
          example: 'WAR22500001'
        warehouse_name:
          type: string
          example: 'warehouse001'
        warehouse_group:
          type: string
          example: 'warehouse001, warehouse002'
          nullable: true
        warehouse_supervisor:
          type: string
          example: 'spv001, spv002, spv003'
          nullable: true
    Supervisor:
      type: object
      properties:
        id:
          type: string
          example: 'SUP22500001'
        supervisor_name:
          type: string
          example: 'supervisor001'
        supervisor_phone:
          type: number
          example: 629283019283098123
          nullable: true
        supervisor_warehouse:
          type: string
          example: 'warehouse001'
          nullable: true
        supervisor_shift:
          type: number 
          example: 1
        disabled:
          type: boolean
          example: true
          nullable: false
    Problem:
      type: object
      properties:
        id:
          type: string
          example: 'PRO22500001'
        warehouse: 
          type: string
        supervisor: 
          type: string
        head_spv: 
          type: string
        kode_item:
          type: string
        tanggal_mulai:
          type: number
        shift_mulai:
          type: number
        pic: 
          type: string
        dl: 
          type: number
        masalah:
          type: string
        sumber_masalah:
         type: string
        solusi:
          type: string
        solusi_panjang:
          type: string
        dl_panjang:
          type: string
        pic_panjang:
          type: string
        tanggal_selesai:
          type: number
        shift_selesai:
          type: number
    Head_supervisor:
      type: object
      properties:
        id:
          type: string
          example: 'HEA12312830'
        name:
          type: string
        phone:
          type: number
        head_shift:
          type: number 
          example: 1
        disabled:
          type: boolean

  requestBodies:
    Warehouse:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                warehouse_name:
                  type: string
                warehouse_group:
                  type: string
                warehouse_supervisors:
                  type: string
    Supervisor:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                supervisor_name:
                  type: string
                supervisor_phone:
                  type: number
                supervisor_warehouse:
                  type: string
                supervisor_shift:
                  type: number
                disabled:
                  type: boolean
    Problem:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                warehouse: 
                  type: string

                supervisor: 
                  type: string

                head_spv: 
                  type: string

                kode_item:
                  type: string
                  
                tanggal_mulai:
                  type: number

                shift_mulai:
                  type: number

                pic: 
                  type: string

                dl: 
                  type: number

                masalah:
                  type: string

                sumberMasalah:
                  type: string

                solusi:
                  type: string

                solusi_panjang:
                  type: string

                dl_panjang:
                  type: string
                  
                pic_panjang:
                  type: string

                tanggal_selesai:
                  type: number

                shift_selesai:
                  type: number
    Head_supervisor:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: number
                head_shift:
                  type: number 
                  example: 1
                disabled:
                  type: boolean

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object 
            properties:
              message:
                type: string

    200Success:
      description: Success operation
      content:
        application/json:
          schema:
            type: object 
            properties:
              message:
                type: string